{"version":3,"file":"ResetRevertDialog.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/ResetRevertDialog.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { classes } from 'typestyle';\nimport { showErrorMessage } from '@jupyterlab/apputils';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { sleep } from '../utils';\nimport { Git, IGitExtension, ILogMessage } from '../tokens';\nimport {\n  actionsWrapperClass,\n  commitFormClass,\n  commitSummaryClass,\n  commitDescriptionClass,\n  buttonClass,\n  cancelButtonClass,\n  closeButtonClass,\n  contentWrapperClass,\n  resetRevertDialogClass,\n  submitButtonClass,\n  titleClass,\n  titleWrapperClass\n} from '../style/ResetRevertDialog';\nimport { SuspendModal } from './SuspendModal';\nimport { Alert } from './Alert';\n\n/**\n * Interface describing component properties.\n */\nexport interface IResetRevertDialogProps {\n  /**\n   * Type of action to perform.\n   */\n  action: 'reset' | 'revert';\n\n  /**\n   * Commit data for a single commit.\n   */\n  commit: Git.ISingleCommitInfo;\n\n  /**\n   * Extension data model.\n   */\n  model: IGitExtension;\n\n  /**\n   * Boolean indicating whether to show the dialog.\n   */\n  open: boolean;\n\n  /**\n   * Boolean indicating whether to enable UI suspension.\n   */\n  suspend: boolean;\n\n  /**\n   * Callback invoked upon closing the dialog.\n   */\n  onClose: () => void;\n}\n\n/**\n * Interface describing component state.\n */\nexport interface IResetRevertDialogState {\n  /**\n   * Commit message summary.\n   */\n  summary: string;\n\n  /**\n   * Commit message description.\n   */\n  description: string;\n\n  /**\n   * Boolean indicating whether component buttons should be disabled.\n   */\n  disabled: boolean;\n\n  /**\n   * Boolean indicating whether UI interaction should be suspended (e.g., due to pending command).\n   */\n  suspend: boolean;\n\n  /**\n   * Boolean indicating whether to show an alert.\n   */\n  alert: boolean;\n\n  /**\n   * Log message.\n   */\n  log: ILogMessage;\n}\n\n/**\n * React component for rendering a dialog for reseting or reverting a single commit.\n */\nexport class ResetRevertDialog extends React.Component<\n  IResetRevertDialogProps,\n  IResetRevertDialogState\n> {\n  /**\n   * Returns a React component for reseting or reverting a single commit.\n   *\n   * @param props - component properties\n   * @returns React component\n   */\n  constructor(props: IResetRevertDialogProps) {\n    super(props);\n    this.state = {\n      summary: '',\n      description: '',\n      disabled: false,\n      suspend: false,\n      alert: false,\n      log: {\n        severity: 'info',\n        message: ''\n      }\n    };\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns React element\n   */\n  render(): React.ReactElement {\n    return (\n      <React.Fragment>\n        {this._renderDialog()}\n        {this._renderFeedback()}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Renders a dialog.\n   *\n   * @returns React element\n   */\n  private _renderDialog(): React.ReactElement {\n    const shortCommit = this.props.commit.commit.slice(0, 7);\n    return (\n      <Dialog\n        classes={{\n          paper: resetRevertDialogClass\n        }}\n        open={this.props.open}\n        onClick={this._onClick}\n        onClose={this._onClose}\n      >\n        <div className={titleWrapperClass}>\n          <p className={titleClass}>\n            {this.props.action === 'revert'\n              ? 'Revert Changes'\n              : 'Reset Changes'}\n          </p>\n          <button className={closeButtonClass}>\n            <ClearIcon\n              titleAccess=\"Close this dialog\"\n              fontSize=\"small\"\n              onClick={this._onClose}\n            />\n          </button>\n        </div>\n        <div className={contentWrapperClass}>\n          <p>\n            {this.props.action === 'revert'\n              ? \"These changes will be reverted. Only commit if you're sure you're okay losing these changes.\"\n              : `All changes after commit ${shortCommit} will be gone forever (hard reset). Are you sure?`}\n          </p>\n          {this.props.action === 'revert' ? (\n            <div className={commitFormClass}>\n              <input\n                className={commitSummaryClass}\n                type=\"text\"\n                placeholder={this._defaultSummary()}\n                title=\"Enter a commit message summary (a single line, preferably less than 50 characters)\"\n                value={this.state.summary}\n                onChange={this._onSummaryChange}\n              />\n              <TextareaAutosize\n                className={commitDescriptionClass}\n                minRows={5}\n                placeholder={this._defaultDescription()}\n                title=\"Enter a commit message description\"\n                value={this.state.description}\n                onChange={this._onDescriptionChange}\n              />\n            </div>\n          ) : null}\n        </div>\n        <DialogActions className={actionsWrapperClass}>\n          <input\n            disabled={this.state.disabled}\n            className={classes(buttonClass, cancelButtonClass)}\n            type=\"button\"\n            title=\"Cancel changes\"\n            value=\"Cancel\"\n            onClick={this._onClose}\n          />\n          <input\n            disabled={this.state.disabled}\n            className={classes(buttonClass, submitButtonClass)}\n            type=\"button\"\n            title=\"Submit changes\"\n            value=\"Submit\"\n            onClick={this._onSubmit}\n          />\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  /**\n   * Renders a component to provide UI feedback.\n   *\n   * @returns React element\n   */\n  private _renderFeedback(): React.ReactElement {\n    return (\n      <React.Fragment>\n        <SuspendModal\n          open={this.props.suspend && this.state.suspend}\n          onClick={this._onFeedbackModalClick}\n        />\n        <Alert\n          open={this.state.alert}\n          message={this.state.log.message}\n          severity={this.state.log.severity}\n          onClose={this._onFeedbackAlertClose}\n        />\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Callback invoked upon updating a commit message summary.\n   *\n   * @param event - event object\n   */\n  private _onSummaryChange = (event: any): void => {\n    this.setState({\n      summary: event.target.value\n    });\n  };\n\n  /**\n   * Callback invoked upon updating a commit message description.\n   *\n   * @param event - event object\n   */\n  private _onDescriptionChange = (event: any): void => {\n    this.setState({\n      description: event.target.value\n    });\n  };\n\n  /**\n   * Callback invoked upon clicking on a dialog.\n   *\n   * @param event - event object\n   */\n  private _onClick = (event: any): void => {\n    event.stopPropagation();\n  };\n\n  /**\n   * Callback invoked upon closing the dialog.\n   *\n   * @param event - event object\n   */\n  private _onClose = (event: any): void => {\n    event.stopPropagation();\n    this.props.onClose();\n    this._reset();\n  };\n\n  /**\n   * Callback invoked upon clicking a button to reset or revert a commit.\n   *\n   * @param event - event object\n   */\n  private _onSubmit = async (): Promise<void> => {\n    const shortCommit = this.props.commit.commit.slice(0, 7);\n    let err: Error;\n\n    this.setState({\n      disabled: true\n    });\n    if (this.props.action === 'reset') {\n      this._log({\n        severity: 'info',\n        message: 'Discarding changes...'\n      });\n      this._suspend(true);\n      try {\n        await Promise.all([\n          sleep(1000),\n          this.props.model.resetToCommit(this.props.commit.commit)\n        ]);\n      } catch (error) {\n        err = error;\n      }\n      this._suspend(false);\n      if (err) {\n        this._log({\n          severity: 'error',\n          message: 'Failed to discard changes.'\n        });\n        showErrorMessage(\n          'Error Discarding Changes',\n          `Failed to discard changes after ${shortCommit}: ${err}`\n        );\n      } else {\n        this._log({\n          severity: 'success',\n          message: 'Successfully discarded changes.'\n        });\n      }\n    } else {\n      this._log({\n        severity: 'info',\n        message: 'Reverting changes...'\n      });\n      this._suspend(true);\n      try {\n        await Promise.all([\n          sleep(1000),\n          this.props.model.revertCommit(\n            this._commitMessage(),\n            this.props.commit.commit\n          )\n        ]);\n      } catch (error) {\n        err = error;\n      }\n      this._suspend(false);\n      if (err) {\n        this._log({\n          severity: 'error',\n          message: 'Failed to revert changes.'\n        });\n        showErrorMessage(\n          'Error Reverting Changes',\n          `Failed to revert ${shortCommit}: ${err}`\n        );\n      } else {\n        this._log({\n          severity: 'success',\n          message: 'Successfully reverted changes.'\n        });\n      }\n    }\n    this._reset();\n    this.props.onClose();\n  };\n\n  /**\n   * Callback invoked upon clicking on the feedback modal.\n   *\n   * @param event - event object\n   */\n  private _onFeedbackModalClick = (): void => {\n    this._suspend(false);\n  };\n\n  /**\n   * Callback invoked upon closing a feedback alert.\n   *\n   * @param event - event object\n   */\n  private _onFeedbackAlertClose = (): void => {\n    this.setState({\n      alert: false\n    });\n  };\n\n  /**\n   * Sets the suspension state.\n   *\n   * @param bool - boolean indicating whether to suspend UI interaction\n   */\n  private _suspend(bool: boolean): void {\n    if (this.props.suspend) {\n      this.setState({\n        suspend: bool\n      });\n    }\n  }\n\n  /**\n   * Sets the current component log message.\n   *\n   * @param msg - log message\n   */\n  private _log(msg: ILogMessage): void {\n    this.setState({\n      alert: true,\n      log: msg\n    });\n  }\n\n  /**\n   * Returns a default commit summary for reverting a commit.\n   *\n   * @returns default commit summary\n   */\n  private _defaultSummary(): string {\n    const summary = this.props.commit.commit_msg.split('\\n')[0];\n    return `Revert \"${summary}\"`;\n  }\n\n  /**\n   * Returns a default commit description for reverting a commit.\n   *\n   * @returns default commit description\n   */\n  private _defaultDescription(): string {\n    return `This reverts commit ${this.props.commit.commit}`;\n  }\n\n  /**\n   * Returns a commit message for reverting a commit.\n   *\n   * @returns commit message\n   */\n  private _commitMessage(): string {\n    const summary = this.state.summary || this._defaultSummary();\n    const desc = this.state.description || this._defaultDescription();\n    return summary + '\\n\\n' + desc + '\\n';\n  }\n\n  /**\n   * Resets component state.\n   */\n  private _reset(): void {\n    this.setState({\n      summary: '',\n      description: '',\n      disabled: false\n    });\n  }\n}\n"]}