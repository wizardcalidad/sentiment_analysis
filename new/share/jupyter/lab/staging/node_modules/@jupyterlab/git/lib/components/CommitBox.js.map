{"version":3,"file":"CommitBox.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/CommitBox.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport {\n  commitFormClass,\n  commitSummaryClass,\n  commitDescriptionClass,\n  commitButtonClass\n} from '../style/CommitBox';\n\n/**\n * Interface describing component properties.\n */\nexport interface ICommitBoxProps {\n  /**\n   * Boolean indicating whether files currently exist which have changes to commit.\n   */\n  hasFiles: boolean;\n\n  /**\n   * Callback to invoke in order to commit changes.\n   *\n   * @param msg - commit message\n   * @returns a promise which commits changes\n   */\n  onCommit: (msg: string) => Promise<void>;\n}\n\n/**\n * Interface describing component state.\n */\nexport interface ICommitBoxState {\n  /**\n   * Commit message summary.\n   */\n  summary: string;\n\n  /**\n   * Commit message description.\n   */\n  description: string;\n}\n\n/**\n * React component for entering a commit message.\n */\nexport class CommitBox extends React.Component<\n  ICommitBoxProps,\n  ICommitBoxState\n> {\n  /**\n   * Returns a React component for entering a commit message.\n   *\n   * @param props - component properties\n   * @returns React component\n   */\n  constructor(props: ICommitBoxProps) {\n    super(props);\n    this.state = {\n      summary: '',\n      description: ''\n    };\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns React element\n   */\n  render(): React.ReactElement {\n    const disabled = !(this.props.hasFiles && this.state.summary);\n    const title = !this.props.hasFiles\n      ? 'Disabled: No files are staged for commit'\n      : !this.state.summary\n      ? 'Disabled: No commit message summary'\n      : 'Commit';\n    return (\n      <form className={commitFormClass}>\n        <input\n          className={commitSummaryClass}\n          type=\"text\"\n          placeholder=\"Summary (required)\"\n          title=\"Enter a commit message summary (a single line, preferably less than 50 characters)\"\n          value={this.state.summary}\n          onChange={this._onSummaryChange}\n          onKeyPress={this._onSummaryKeyPress}\n        />\n        <TextareaAutosize\n          className={commitDescriptionClass}\n          minRows={5}\n          placeholder=\"Description\"\n          title=\"Enter a commit message description\"\n          value={this.state.description}\n          onChange={this._onDescriptionChange}\n        />\n        <input\n          className={commitButtonClass}\n          type=\"button\"\n          title={title}\n          value=\"Commit\"\n          disabled={disabled}\n          onClick={this._onCommitClick}\n        />\n      </form>\n    );\n  }\n\n  /**\n   * Callback invoked upon clicking a commit message submit button.\n   *\n   * @param event - event object\n   */\n  private _onCommitClick = (): void => {\n    const msg = this.state.summary + '\\n\\n' + this.state.description + '\\n';\n    this.props.onCommit(msg);\n\n    // NOTE: we assume here that committing changes always works and we can safely clear component state\n    this._reset();\n  };\n\n  /**\n   * Callback invoked upon updating a commit message description.\n   *\n   * @param event - event object\n   */\n  private _onDescriptionChange = (event: any): void => {\n    this.setState({\n      description: event.target.value\n    });\n  };\n\n  /**\n   * Callback invoked upon updating a commit message summary.\n   *\n   * @param event - event object\n   */\n  private _onSummaryChange = (event: any): void => {\n    this.setState({\n      summary: event.target.value\n    });\n  };\n\n  /**\n   * Callback invoked upon a `'keypress'` event when entering a commit message summary.\n   *\n   * ## Notes\n   *\n   * -   Prevents triggering a `'submit'` action when hitting the `ENTER` key while entering a commit message summary.\n   *\n   * @param event - event object\n   */\n  private _onSummaryKeyPress(event: any): void {\n    if (event.which === 13) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Resets component state (e.g., in order to re-initialize the commit message input box).\n   */\n  private _reset(): void {\n    this.setState({\n      summary: '',\n      description: ''\n    });\n  }\n}\n"]}