{"version":3,"file":"GitStage.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/GitStage.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAC1E,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,sBAAsB,EACtB,gBAAgB,EAChB,yBAAyB,EACzB,uBAAuB,EACvB,sBAAsB,EACvB,MAAM,wBAAwB,CAAC;AA+BhC,MAAM,CAAC,MAAM,QAAQ,GAA4C,CAC/D,KAA8C,EAC9C,EAAE;IACF,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAEvD,OAAO,CACL,6BAAK,SAAS,EAAE,yBAAyB;QACvC,6BAAK,SAAS,EAAE,gBAAgB;YAC7B,KAAK,CAAC,WAAW,IAAI,CACpB,gCACE,SAAS,EAAE,sBAAsB,EACjC,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBACpB,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC;qBAC1B;gBACH,CAAC,IAEA,SAAS,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAC/B,oBAAC,aAAa,CAAC,KAAK,OAAG,CACxB,CAAC,CAAC,CAAC,CACF,oBAAC,cAAc,CAAC,KAAK,OAAG,CACzB,CACM,CACV;YACD,8BAAM,SAAS,EAAE,uBAAuB,IAAG,KAAK,CAAC,OAAO,CAAQ;YAC/D,KAAK,CAAC,OAAO;YACd,8BAAM,SAAS,EAAE,sBAAsB;;gBAAI,KAAK,CAAC,MAAM;oBAAS,CAC5D;QACL,SAAS,IAAI,CACZ,4BAAI,SAAS,EAAE,yBAAyB,IAAG,KAAK,CAAC,QAAQ,CAAM,CAChE,CACG,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { caretDownIcon, caretRightIcon } from '@jupyterlab/ui-components';\nimport * as React from 'react';\nimport {\n  changeStageButtonStyle,\n  sectionAreaStyle,\n  sectionFileContainerStyle,\n  sectionHeaderLabelStyle,\n  sectionHeaderSizeStyle\n} from '../style/GitStageStyle';\n\n/**\n * Git stage component properties\n */\nexport interface IGitStageProps {\n  /**\n   * Actions component to display at the far right of the stage\n   */\n  actions: React.ReactElement;\n  /**\n   * Is this group collapsible\n   */\n  collapsible?: boolean;\n  /**\n   * Group title\n   */\n  heading: string;\n  /**\n   * Number of files in the group\n   */\n  nFiles: number;\n}\n\n/**\n * Git stage component state\n */\nexport interface IGitStageState {\n  showFiles: boolean;\n}\n\nexport const GitStage: React.FunctionComponent<IGitStageProps> = (\n  props: React.PropsWithChildren<IGitStageProps>\n) => {\n  const [showFiles, setShowFiles] = React.useState(true);\n\n  return (\n    <div className={sectionFileContainerStyle}>\n      <div className={sectionAreaStyle}>\n        {props.collapsible && (\n          <button\n            className={changeStageButtonStyle}\n            onClick={() => {\n              if (props.nFiles > 0) {\n                setShowFiles(!showFiles);\n              }\n            }}\n          >\n            {showFiles && props.nFiles > 0 ? (\n              <caretDownIcon.react />\n            ) : (\n              <caretRightIcon.react />\n            )}\n          </button>\n        )}\n        <span className={sectionHeaderLabelStyle}>{props.heading}</span>\n        {props.actions}\n        <span className={sectionHeaderSizeStyle}>({props.nFiles})</span>\n      </div>\n      {showFiles && (\n        <ul className={sectionFileContainerStyle}>{props.children}</ul>\n      )}\n    </div>\n  );\n};\n"]}