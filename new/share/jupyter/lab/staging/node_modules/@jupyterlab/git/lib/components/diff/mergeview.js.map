{"version":3,"file":"mergeview.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/diff/mergeview.ts"],"names":[],"mappings":"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","sourcesContent":["// This code is based on the CodeMirror merge add-on\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// The linter must be relaxed on this imported file.\n/* eslint-disable @typescript-eslint/ban-ts-ignore */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-inner-declarations */\n/* eslint-disable prefer-arrow-callback */\n\nimport CodeMirror from 'codemirror';\n\nimport {\n  diff_match_patch,\n  DIFF_EQUAL,\n  DIFF_DELETE,\n  DIFF_INSERT\n} from 'diff-match-patch';\n\nexport const GutterID = 'CodeMirror-patchgutter';\n\nenum DiffStatus {\n  Equal = DIFF_EQUAL,\n  Delete = DIFF_DELETE,\n  Insert = DIFF_INSERT\n}\n\nexport namespace MergeView {\n  /**\n   * Options available to MergeView.\n   */\n  export interface IMergeViewEditorConfiguration\n    extends CodeMirror.EditorConfiguration {\n    /**\n     * Determines whether the original editor allows editing. Defaults to false.\n     */\n    allowEditingOriginals?: boolean;\n\n    /**\n     * When true stretches of unchanged text will be collapsed. When a number is given, this indicates the amount\n     * of lines to leave visible around such stretches (which defaults to 2). Defaults to false.\n     */\n    collapseIdentical?: boolean | number;\n\n    /**\n     * Sets the style used to connect changed chunks of code. By default, connectors are drawn. When this is set to \"align\",\n     * the smaller chunk is padded to align with the bigger chunk instead.\n     */\n    connect?: string;\n\n    /**\n     * Should the whitespace be ignored when comparing text\n     */\n    ignoreWhitespace?: boolean;\n\n    /**\n     * Callback for when stretches of unchanged text are collapsed.\n     */\n    onCollapse?(\n      mergeView: IMergeViewEditor,\n      line: number,\n      size: number,\n      mark: CodeMirror.TextMarker\n    ): void;\n\n    /**\n     * Provides original version of the document to be shown on the right of the editor.\n     */\n    orig: any;\n\n    /**\n     * Provides original version of the document to be shown on the left of the editor.\n     * To create a 2-way (as opposed to 3-way) merge view, provide only one of origLeft and origRight.\n     */\n    origLeft?: any;\n\n    /**\n     * Provides original version of document to be shown on the right of the editor.\n     * To create a 2-way (as opposed to 3-way) merge view, provide only one of origLeft and origRight.\n     */\n    origRight?: any;\n\n    /**\n     * Determines whether buttons that allow the user to revert changes are shown. Defaults to true.\n     */\n    revertButtons?: boolean;\n\n    /**\n     * When true, changed pieces of text are highlighted. Defaults to true.\n     */\n    showDifferences?: boolean;\n\n    revertChunk?: (\n      mergeView: IMergeViewEditor,\n      from: CodeMirror.Editor,\n      origStart: CodeMirror.Position,\n      origEnd: CodeMirror.Position,\n      to: CodeMirror.Editor,\n      editStart: CodeMirror.Position,\n      editEnd: CodeMirror.Position\n    ) => void;\n  }\n\n  export interface IMergeViewEditor {\n    /**\n     * Returns the editor instance.\n     */\n    editor(): CodeMirror.Editor;\n\n    /**\n     * Left side of the merge view.\n     */\n    left: IDiffView;\n    leftChunks(): IMergeViewDiffChunk[];\n    leftOriginal(): CodeMirror.Editor;\n\n    /**\n     * Right side of the merge view.\n     */\n    right: IDiffView;\n    rightChunks(): IMergeViewDiffChunk[];\n    rightOriginal(): CodeMirror.Editor;\n\n    /**\n     * Sets whether or not the merge view should show the differences between the editor views.\n     */\n    setShowDifferences(showDifferences: boolean): void;\n  }\n\n  /**\n   * Tracks changes in chunks from oroginal to new.\n   */\n  export interface IMergeViewDiffChunk {\n    editFrom: number;\n    editTo: number;\n    origFrom: number;\n    origTo: number;\n  }\n\n  export interface IDiffView {\n    /**\n     * Forces the view to reload.\n     */\n    forceUpdate(): (mode: string) => void;\n\n    /**\n     * Sets whether or not the merge view should show the differences between the editor views.\n     */\n    setShowDifferences(showDifferences: boolean): void;\n  }\n\n  export type Diff = [DiffStatus, string];\n\n  export interface IClasses {\n    chunk: string;\n    start: string;\n    end: string;\n    insert: string;\n    del: string;\n    connect: string;\n    classLocation?: string[];\n  }\n\n  export type PanelType = 'left' | 'right';\n\n  export interface IState {\n    from: number;\n    to: number;\n    marked: CodeMirror.LineHandle[];\n  }\n}\n\nconst Pos = CodeMirror.Pos;\nconst svgNS = 'http://www.w3.org/2000/svg';\n\nclass DiffView implements MergeView.IDiffView {\n  constructor(mv: MergeView, type: MergeView.PanelType) {\n    this.mv = mv;\n    this.type = type;\n    this.classes =\n      type == 'left'\n        ? {\n            chunk: 'CodeMirror-merge-l-chunk',\n            start: 'CodeMirror-merge-l-chunk-start',\n            end: 'CodeMirror-merge-l-chunk-end',\n            insert: 'CodeMirror-merge-l-inserted',\n            del: 'CodeMirror-merge-l-deleted',\n            connect: 'CodeMirror-merge-l-connect'\n          }\n        : {\n            chunk: 'CodeMirror-merge-r-chunk',\n            start: 'CodeMirror-merge-r-chunk-start',\n            end: 'CodeMirror-merge-r-chunk-end',\n            insert: 'CodeMirror-merge-r-inserted',\n            del: 'CodeMirror-merge-r-deleted',\n            connect: 'CodeMirror-merge-r-connect'\n          };\n  }\n\n  init(\n    pane: HTMLElement,\n    orig: string | CodeMirror.Doc,\n    options: MergeView.IMergeViewEditorConfiguration\n  ): void {\n    this.edit = this.mv.edit;\n    (this.edit.state.diffViews || (this.edit.state.diffViews = [])).push(this);\n    this.orig = CodeMirror(pane, {\n      ...options,\n      value: orig,\n      readOnly: !this.mv.options.allowEditingOriginals\n    });\n    if (this.mv.options.connect == 'align') {\n      if (!this.edit.state.trackAlignable) {\n        this.edit.state.trackAlignable = new TrackAlignable(this.edit);\n      }\n      this.orig.state.trackAlignable = new TrackAlignable(this.orig);\n    }\n    // @ts-ignore\n    this.lockButton.title = this.edit.phrase('Toggle locked scrolling');\n\n    this.orig.state.diffViews = [this];\n    // @ts-ignore\n    let classLocation = options.chunkClassLocation || 'background';\n    if (Object.prototype.toString.call(classLocation) != '[object Array]') {\n      classLocation = [classLocation];\n    }\n    this.classes.classLocation = classLocation;\n\n    this.diff = getDiff(\n      asString(orig),\n      asString(options.value),\n      this.mv.options.ignoreWhitespace\n    );\n    this.chunks = getChunks(this.diff);\n    this.diffOutOfDate = this.dealigned = false;\n    this.needsScrollSync = null;\n\n    this.showDifferences = options.showDifferences !== false;\n  }\n\n  registerEvents(otherDv: DiffView): void {\n    this.forceUpdate = DiffView.registerUpdate(this);\n    DiffView.setScrollLock(this, true, false);\n    DiffView.registerScroll(this, otherDv);\n  }\n\n  setShowDifferences(val: boolean): void {\n    val = val !== false;\n    if (val != this.showDifferences) {\n      this.showDifferences = val;\n      this.forceUpdate('full');\n    }\n  }\n\n  static setScrollLock(dv: DiffView, val: boolean, action?: boolean): void {\n    dv.lockScroll = val;\n    if (val && action != false) {\n      if (DiffView.syncScroll(dv, true)) {\n        makeConnections(dv);\n      }\n    }\n    // @ts-ignore\n    (val ? CodeMirror.addClass : CodeMirror.rmClass)(\n      dv.lockButton,\n      'CodeMirror-merge-scrolllock-enabled'\n    );\n  }\n\n  private static registerUpdate(dv: DiffView): (mode?: string) => void {\n    const edit: MergeView.IState = { from: 0, to: 0, marked: [] };\n    const orig: MergeView.IState = { from: 0, to: 0, marked: [] };\n    let debounceChange: number;\n    let updatingFast = false;\n\n    function update(mode?: string): void {\n      DiffView.updating = true;\n      updatingFast = false;\n      if (mode == 'full') {\n        // @ts-ignore\n        if (dv.svg) {\n          Private.clear(dv.svg);\n        }\n        // @ts-ignore\n        if (dv.copyButtons) {\n          Private.clear(dv.copyButtons);\n        }\n        clearMarks(dv.edit, edit.marked, dv.classes);\n        clearMarks(dv.orig, orig.marked, dv.classes);\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      ensureDiff(dv);\n      if (dv.showDifferences) {\n        updateMarks(dv.edit, dv.diff, edit, DiffStatus.Insert, dv.classes);\n        updateMarks(dv.orig, dv.diff, orig, DiffStatus.Delete, dv.classes);\n      }\n\n      if (dv.mv.options.connect == 'align') {\n        alignChunks(dv);\n      }\n      makeConnections(dv);\n      if (dv.needsScrollSync != null) {\n        DiffView.syncScroll(dv, dv.needsScrollSync);\n      }\n\n      DiffView.updating = false;\n    }\n    function setDealign(fast: boolean): void {\n      if (DiffView.updating) {\n        return;\n      }\n      dv.dealigned = true;\n      set(fast);\n    }\n    function set(fast: boolean): void {\n      if (DiffView.updating || updatingFast) {\n        return;\n      }\n      clearTimeout(debounceChange);\n      if (fast === true) {\n        updatingFast = true;\n      }\n      debounceChange = setTimeout(update, fast === true ? 20 : 250);\n    }\n    function change(\n      _cm: CodeMirror.Editor,\n      change: CodeMirror.EditorChangeLinkedList\n    ): void {\n      if (!dv.diffOutOfDate) {\n        dv.diffOutOfDate = true;\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      // Update faster when a line was added/removed\n      setDealign(change.text.length - 1 != change.to.line - change.from.line);\n    }\n    function swapDoc(): void {\n      dv.diffOutOfDate = true;\n      dv.dealigned = true;\n      update('full');\n    }\n    dv.edit.on('change', change);\n    dv.orig.on('change', change);\n    dv.edit.on('swapDoc', swapDoc);\n    dv.orig.on('swapDoc', swapDoc);\n    if (dv.mv.options.connect === 'align') {\n      CodeMirror.on(dv.edit.state.trackAlignable, 'realign', setDealign);\n      CodeMirror.on(dv.orig.state.trackAlignable, 'realign', setDealign);\n    }\n    dv.edit.on('viewportChange', function() {\n      set(false);\n    });\n    dv.orig.on('viewportChange', function() {\n      set(false);\n    });\n    update();\n    return update;\n  }\n\n  private static registerScroll(dv: DiffView, otherDv: DiffView): void {\n    dv.edit.on('scroll', function() {\n      if (DiffView.syncScroll(dv, true)) {\n        makeConnections(dv);\n      }\n    });\n    dv.orig.on('scroll', function() {\n      if (DiffView.syncScroll(dv, false)) {\n        makeConnections(dv);\n      }\n      if (otherDv) {\n        if (DiffView.syncScroll(otherDv, true)) {\n          makeConnections(otherDv);\n        }\n      }\n    });\n  }\n\n  private static syncScroll(dv: DiffView, toOrig: boolean): boolean {\n    // Change handler will do a refresh after a timeout when diff is out of date\n    if (dv.diffOutOfDate) {\n      if (dv.lockScroll && dv.needsScrollSync == null) {\n        dv.needsScrollSync = toOrig;\n      }\n      return false;\n    }\n    dv.needsScrollSync = null;\n    if (!dv.lockScroll) {\n      return true;\n    }\n    let editor: CodeMirror.Editor;\n    let other: CodeMirror.Editor;\n    const now = +new Date();\n    if (toOrig) {\n      editor = dv.edit;\n      other = dv.orig;\n    } else {\n      editor = dv.orig;\n      other = dv.edit;\n    }\n    // Don't take action if the position of this editor was recently set\n    // (to prevent feedback loops)\n    if (\n      editor.state.scrollSetBy == dv &&\n      (editor.state.scrollSetAt || 0) + 250 > now\n    ) {\n      return false;\n    }\n\n    const sInfo = editor.getScrollInfo();\n    let targetPos = 0;\n    if (dv.mv.options.connect == 'align') {\n      targetPos = sInfo.top;\n    } else {\n      const halfScreen = 0.5 * sInfo.clientHeight;\n      const midY = sInfo.top + halfScreen;\n      const mid = editor.lineAtHeight(midY, 'local');\n      const around = chunkBoundariesAround(dv.chunks, mid, toOrig);\n      const off = DiffView.getOffsets(\n        editor,\n        toOrig ? around.edit : around.orig\n      );\n      const offOther = DiffView.getOffsets(\n        other,\n        toOrig ? around.orig : around.edit\n      );\n      const ratio = (midY - off.top) / (off.bot - off.top);\n      targetPos =\n        offOther.top - halfScreen + ratio * (offOther.bot - offOther.top);\n\n      let botDist: number;\n      let mix: number;\n      // Some careful tweaking to make sure no space is left out of view\n      // when scrolling to top or bottom.\n      if (targetPos > sInfo.top) {\n        mix = sInfo.top / halfScreen;\n        if (mix < 1) {\n          targetPos = targetPos * mix + sInfo.top * (1 - mix);\n        }\n      } else {\n        botDist = sInfo.height - sInfo.clientHeight - sInfo.top;\n        if (botDist < halfScreen) {\n          const otherInfo = other.getScrollInfo();\n          const botDistOther =\n            otherInfo.height - otherInfo.clientHeight - targetPos;\n          if (botDistOther > botDist) {\n            mix = botDist / halfScreen;\n            if (mix < 1) {\n              targetPos =\n                targetPos * mix +\n                (otherInfo.height - otherInfo.clientHeight - botDist) *\n                  (1 - mix);\n            }\n          }\n        }\n      }\n    }\n\n    other.scrollTo(sInfo.left, targetPos);\n    other.state.scrollSetAt = now;\n    other.state.scrollSetBy = dv;\n    return true;\n  }\n\n  private static getOffsets(\n    editor: CodeMirror.Editor,\n    around: { before: number | null; after: number | null }\n  ): { top: number; bot: number } {\n    let bot = around.after;\n    if (bot == null) {\n      // @ts-ignore\n      bot = editor.lastLine() + 1;\n    }\n    return {\n      top: editor.heightAtLine(around.before || 0, 'local'),\n      bot: editor.heightAtLine(bot, 'local')\n    };\n  }\n\n  mv: MergeView;\n  type: MergeView.PanelType;\n  classes: MergeView.IClasses;\n  edit: CodeMirror.Editor;\n  orig: CodeMirror.Editor;\n  lockButton: HTMLElement;\n  copyButtons: HTMLDivElement;\n  svg: SVGSVGElement;\n  gap: HTMLDivElement;\n  lockScroll: boolean;\n  diff: MergeView.Diff[];\n  chunks: MergeView.IMergeViewDiffChunk[];\n  dealigned: boolean;\n  diffOutOfDate: boolean;\n  needsScrollSync: boolean;\n  showDifferences: boolean;\n  forceUpdate: (mode?: string) => any;\n  private static updating = false;\n}\n\nfunction ensureDiff(dv: DiffView): void {\n  if (dv.diffOutOfDate) {\n    dv.diff = getDiff(\n      dv.orig.getValue(),\n      dv.edit.getValue(),\n      dv.mv.options.ignoreWhitespace\n    );\n    dv.chunks = getChunks(dv.diff);\n    dv.diffOutOfDate = false;\n    CodeMirror.signal(dv.edit, 'updateDiff', dv.diff);\n  }\n}\n\n// Updating the marks for editor content\n\nfunction removeClass(\n  editor: CodeMirror.Editor,\n  line: any,\n  classes: MergeView.IClasses\n): void {\n  const locs = classes.classLocation;\n  for (let i = 0; i < locs.length; i++) {\n    editor.removeLineClass(line, locs[i], classes.chunk);\n    editor.removeLineClass(line, locs[i], classes.start);\n    editor.removeLineClass(line, locs[i], classes.end);\n  }\n}\n\nfunction isTextMarker(\n  marker: CodeMirror.TextMarker | CodeMirror.LineHandle\n): marker is CodeMirror.TextMarker {\n  return 'clear' in marker;\n}\n\nfunction clearMarks(\n  editor: CodeMirror.Editor,\n  arr: CodeMirror.TextMarker[] | CodeMirror.LineHandle[],\n  classes: MergeView.IClasses\n): void {\n  for (let i = 0; i < arr.length; ++i) {\n    const mark = arr[i];\n    if (isTextMarker(mark)) {\n      mark.clear();\n      // @ts-ignore\n    } else if (mark.parent) {\n      removeClass(editor, mark, classes);\n    }\n  }\n  arr.length = 0;\n\n  editor.clearGutter(GutterID);\n}\n\n// FIXME maybe add a margin around viewport to prevent too many updates\nfunction updateMarks(\n  editor: CodeMirror.Editor,\n  diff: MergeView.Diff[],\n  state: MergeView.IState,\n  type: DiffStatus,\n  classes: MergeView.IClasses\n): void {\n  const vp = editor.getViewport();\n  editor.operation(function() {\n    if (\n      state.from == state.to ||\n      vp.from - state.to > 20 ||\n      state.from - vp.to > 20\n    ) {\n      clearMarks(editor, state.marked, classes);\n      markChanges(editor, diff, type, state.marked, vp.from, vp.to, classes);\n      state.from = vp.from;\n      state.to = vp.to;\n    } else {\n      if (vp.from < state.from) {\n        markChanges(\n          editor,\n          diff,\n          type,\n          state.marked,\n          vp.from,\n          state.from,\n          classes\n        );\n        state.from = vp.from;\n      }\n      if (vp.to > state.to) {\n        markChanges(editor, diff, type, state.marked, state.to, vp.to, classes);\n        state.to = vp.to;\n      }\n    }\n  });\n}\n\nfunction addClass(\n  editor: CodeMirror.Editor,\n  lineNr: number,\n  classes: MergeView.IClasses,\n  main: boolean,\n  start: boolean,\n  end: boolean\n): CodeMirror.LineHandle {\n  const locs = classes.classLocation;\n  // @ts-ignore\n  const line: CodeMirror.LineHandle = editor.getLineHandle(lineNr);\n  for (let i = 0; i < locs.length; i++) {\n    if (main) {\n      editor.addLineClass(line, locs[i], classes.chunk);\n    }\n    if (start) {\n      editor.addLineClass(line, locs[i], classes.start);\n    }\n    if (end) {\n      editor.addLineClass(line, locs[i], classes.end);\n    }\n  }\n  return line;\n}\n\nfunction makeGutter(isDelete: boolean): HTMLDivElement {\n  const marker = document.createElement('div');\n  marker.className = isDelete\n    ? 'CodeMirror-patchgutter-delete'\n    : 'CodeMirror-patchgutter-insert';\n  return marker;\n}\n\nfunction markChanges(\n  editor: CodeMirror.Editor,\n  diff: MergeView.Diff[],\n  type: DiffStatus,\n  marks: CodeMirror.LineHandle[],\n  from: number,\n  to: number,\n  classes: MergeView.IClasses\n): void {\n  let pos = Pos(0, 0);\n  const top = Pos(from, 0);\n  // @ts-ignore\n  const bot = editor.clipPos(Pos(to - 1));\n  const cls = type == DiffStatus.Delete ? classes.del : classes.insert;\n  function markChunk(start: number, end: number): void {\n    const bfrom = Math.max(from, start);\n    const bto = Math.min(to, end);\n    for (let i = bfrom; i < bto; ++i) {\n      marks.push(addClass(editor, i, classes, true, i == start, i == end - 1));\n      editor.setGutterMarker(\n        i,\n        GutterID,\n        makeGutter(type == DiffStatus.Delete)\n      );\n    }\n    // When the chunk is empty, make sure a horizontal line shows up\n    if (start == end && bfrom == end && bto == end) {\n      if (bfrom) {\n        marks.push(addClass(editor, bfrom - 1, classes, false, false, true));\n      } else {\n        marks.push(addClass(editor, bfrom, classes, false, true, false));\n      }\n    }\n  }\n\n  let chunkStart = 0;\n  let pending = false;\n  for (let i = 0; i < diff.length; ++i) {\n    const part = diff[i];\n    const tp = part[0];\n    const str = part[1];\n    if (tp == DiffStatus.Equal) {\n      const cleanFrom = pos.line + (startOfLineClean(diff, i) ? 0 : 1);\n      moveOver(pos, str);\n      const cleanTo = pos.line + (endOfLineClean(diff, i) ? 1 : 0);\n      if (cleanTo > cleanFrom) {\n        if (pending) {\n          markChunk(chunkStart, cleanFrom);\n          pending = false;\n        }\n        chunkStart = cleanTo;\n      }\n    } else {\n      pending = true;\n      if (tp == type) {\n        const end = moveOver(pos, str, true);\n        const a = Private.posMax(top, pos);\n        const b = Private.posMin(bot, end);\n        if (!Private.posEq(a, b)) {\n          // @ts-ignore\n          marks.push(editor.markText(a, b, { className: cls }));\n        }\n        pos = end;\n      }\n    }\n  }\n  if (pending) {\n    markChunk(chunkStart, pos.line + 1);\n  }\n}\n\n// Updating the gap between editor and original\n\nfunction makeConnections(dv: DiffView): void {\n  if (!dv.showDifferences) {\n    return;\n  }\n\n  let w = 0;\n  if (dv.svg) {\n    Private.clear(dv.svg);\n    w = dv.gap.offsetWidth;\n    Private.attrs(dv.svg, 'width', w, 'height', dv.gap.offsetHeight);\n  }\n  if (dv.copyButtons) {\n    Private.clear(dv.copyButtons);\n  }\n\n  const vpEdit = dv.edit.getViewport();\n  const vpOrig = dv.orig.getViewport();\n  const outerTop = dv.mv.wrap.getBoundingClientRect().top;\n  const sTopEdit =\n    outerTop -\n    dv.edit.getScrollerElement().getBoundingClientRect().top +\n    dv.edit.getScrollInfo().top;\n  const sTopOrig =\n    outerTop -\n    dv.orig.getScrollerElement().getBoundingClientRect().top +\n    dv.orig.getScrollInfo().top;\n  for (let i = 0; i < dv.chunks.length; i++) {\n    const ch = dv.chunks[i];\n    if (\n      ch.editFrom <= vpEdit.to &&\n      ch.editTo >= vpEdit.from &&\n      ch.origFrom <= vpOrig.to &&\n      ch.origTo >= vpOrig.from\n    ) {\n      drawConnectorsForChunk(dv, ch, sTopOrig, sTopEdit, w);\n    }\n  }\n}\n\nfunction getMatchingOrigLine(\n  editLine: number,\n  chunks: MergeView.IMergeViewDiffChunk[]\n): number | null {\n  let editStart = 0;\n  let origStart = 0;\n  for (let i = 0; i < chunks.length; i++) {\n    const chunk = chunks[i];\n    if (chunk.editTo > editLine && chunk.editFrom <= editLine) {\n      return null;\n    }\n    if (chunk.editFrom > editLine) {\n      break;\n    }\n    editStart = chunk.editTo;\n    origStart = chunk.origTo;\n  }\n  return origStart + (editLine - editStart);\n}\n\n// Combines information about chunks and widgets/markers to return\n// an array of lines, in a single editor, that probably need to be\n// aligned with their counterparts in the editor next to it.\nfunction alignableFor(\n  cm: CodeMirror.Editor,\n  chunks: MergeView.IMergeViewDiffChunk[],\n  isOrig: boolean\n): number[] {\n  const tracker = cm.state.trackAlignable;\n  // @ts-ignore\n  let start: number = cm.firstLine();\n  let trackI = 0;\n  const result: number[] = [];\n  for (let i = 0; ; i++) {\n    const chunk = chunks[i];\n    const chunkStart = !chunk ? 1e9 : isOrig ? chunk.origFrom : chunk.editFrom;\n    for (; trackI < tracker.alignable.length; trackI += 2) {\n      const n: number = tracker.alignable[trackI] + 1;\n      if (n <= start) {\n        continue;\n      }\n      if (n <= chunkStart) {\n        result.push(n);\n      } else {\n        break;\n      }\n    }\n    if (!chunk) {\n      break;\n    }\n    result.push((start = isOrig ? chunk.origTo : chunk.editTo));\n  }\n  return result;\n}\n\n// Given information about alignable lines in two editors, fill in\n// the result (an array of three-element arrays) to reflect the\n// lines that need to be aligned with each other.\nfunction mergeAlignable(\n  result: number[][],\n  origAlignable: number[],\n  chunks: MergeView.IMergeViewDiffChunk[],\n  setIndex: number\n): void {\n  let rI = 0;\n  let origI = 0;\n  let chunkI = 0;\n  let diff = 0;\n  outer: for (; ; rI++) {\n    const nextR = result[rI];\n    const nextO = origAlignable[origI];\n    if (!nextR && nextO == null) {\n      break;\n    }\n\n    const rLine = nextR ? nextR[0] : 1e9;\n    const oLine = nextO == null ? 1e9 : nextO;\n    while (chunkI < chunks.length) {\n      const chunk = chunks[chunkI];\n      if (chunk.origFrom <= oLine && chunk.origTo > oLine) {\n        origI++;\n        rI--;\n        continue outer;\n      }\n      if (chunk.editTo > rLine) {\n        if (chunk.editFrom <= rLine) {\n          continue outer;\n        }\n        break;\n      }\n      diff += chunk.origTo - chunk.origFrom - (chunk.editTo - chunk.editFrom);\n      chunkI++;\n    }\n    if (rLine == oLine - diff) {\n      nextR[setIndex] = oLine;\n      origI++;\n    } else if (rLine < oLine - diff) {\n      nextR[setIndex] = rLine + diff;\n    } else {\n      const record = [oLine - diff, null, null];\n      record[setIndex] = oLine;\n      result.splice(rI, 0, record);\n      origI++;\n    }\n  }\n}\n\nfunction findAlignedLines(dv: DiffView, other: DiffView) {\n  const alignable = alignableFor(dv.edit, dv.chunks, false);\n  const result = [];\n  if (other) {\n    for (let i = 0, j = 0; i < other.chunks.length; i++) {\n      const n = other.chunks[i].editTo;\n      while (j < alignable.length && alignable[j] < n) {\n        j++;\n      }\n      if (j == alignable.length || alignable[j] != n) {\n        alignable.splice(j++, 0, n);\n      }\n    }\n  }\n  for (let i = 0; i < alignable.length; i++) {\n    result.push([alignable[i], null, null]);\n  }\n\n  mergeAlignable(result, alignableFor(dv.orig, dv.chunks, true), dv.chunks, 1);\n  if (other) {\n    mergeAlignable(\n      result,\n      alignableFor(other.orig, other.chunks, true),\n      other.chunks,\n      2\n    );\n  }\n\n  return result;\n}\n\nfunction alignChunks(dv: DiffView, force?: boolean) {\n  if (!dv.dealigned && !force) {\n    return;\n  }\n  // @ts-ignore\n  if (!dv.orig.curOp) {\n    return dv.orig.operation(function() {\n      alignChunks(dv, force);\n    });\n  }\n\n  dv.dealigned = false;\n  const other = dv.mv.left == dv ? dv.mv.right : dv.mv.left;\n  if (other) {\n    ensureDiff(other);\n    other.dealigned = false;\n  }\n  const linesToAlign = findAlignedLines(dv, other);\n\n  // Clear old aligners\n  const aligners = dv.mv.aligners;\n  for (let i = 0; i < aligners.length; i++) {\n    aligners[i].clear();\n  }\n  aligners.length = 0;\n\n  const cm = [dv.edit, dv.orig];\n  const scroll = [];\n  if (other) {\n    cm.push(other.orig);\n  }\n  for (let i = 0; i < cm.length; i++) {\n    scroll.push(cm[i].getScrollInfo().top);\n  }\n\n  for (let ln = 0; ln < linesToAlign.length; ln++) {\n    alignLines(cm, linesToAlign[ln], aligners);\n  }\n\n  for (let i = 0; i < cm.length; i++) {\n    cm[i].scrollTo(null, scroll[i]);\n  }\n}\n\nfunction alignLines(\n  cm: CodeMirror.Editor[],\n  lines: number[],\n  aligners: CodeMirror.LineWidget[]\n): void {\n  let maxOffset = 0;\n  const offset = [];\n  for (let i = 0; i < cm.length; i++) {\n    if (lines[i] != null) {\n      const off = cm[i].heightAtLine(lines[i], 'local');\n      offset[i] = off;\n      maxOffset = Math.max(maxOffset, off);\n    }\n  }\n  for (let i = 0; i < cm.length; i++) {\n    if (lines[i] != null) {\n      const diff = maxOffset - offset[i];\n      if (diff > 1) {\n        aligners.push(padAbove(cm[i], lines[i], diff));\n      }\n    }\n  }\n}\n\nfunction padAbove(cm: CodeMirror.Editor, line: number, size: number) {\n  let above = true;\n  // @ts-ignore\n  if (line > cm.lastLine()) {\n    line--;\n    above = false;\n  }\n  const elt = document.createElement('div');\n  elt.className = 'CodeMirror-merge-spacer';\n  elt.style.height = size + 'px';\n  elt.style.minWidth = '1px';\n  return cm.addLineWidget(line, elt, {\n    // @ts-ignore\n    height: size,\n    above: above,\n    mergeSpacer: true,\n    handleMouseEvents: true\n  });\n}\n\nfunction drawConnectorsForChunk(\n  dv: DiffView,\n  chunk: MergeView.IMergeViewDiffChunk,\n  sTopOrig: number,\n  sTopEdit: number,\n  w: number\n) {\n  const flip = dv.type == 'left';\n  const top = dv.orig.heightAtLine(chunk.origFrom, 'local', true) - sTopOrig;\n  if (dv.svg) {\n    let topLpx = top;\n    let topRpx = dv.edit.heightAtLine(chunk.editFrom, 'local', true) - sTopEdit;\n    if (flip) {\n      const tmp = topLpx;\n      topLpx = topRpx;\n      topRpx = tmp;\n    }\n    let botLpx = dv.orig.heightAtLine(chunk.origTo, 'local', true) - sTopOrig;\n    let botRpx = dv.edit.heightAtLine(chunk.editTo, 'local', true) - sTopEdit;\n    if (flip) {\n      const tmp = botLpx;\n      botLpx = botRpx;\n      botRpx = tmp;\n    }\n    const curveTop =\n      ' C ' +\n      w / 2 +\n      ' ' +\n      topRpx +\n      ' ' +\n      w / 2 +\n      ' ' +\n      topLpx +\n      ' ' +\n      (w + 2) +\n      ' ' +\n      topLpx;\n    const curveBot =\n      ' C ' +\n      w / 2 +\n      ' ' +\n      botLpx +\n      ' ' +\n      w / 2 +\n      ' ' +\n      botRpx +\n      ' -1 ' +\n      botRpx;\n    Private.attrs(\n      dv.svg.appendChild(document.createElementNS(svgNS, 'path')),\n      'd',\n      'M -1 ' +\n        topRpx +\n        curveTop +\n        ' L ' +\n        (w + 2) +\n        ' ' +\n        botLpx +\n        curveBot +\n        ' z',\n      'class',\n      dv.classes.connect\n    );\n  }\n  if (dv.copyButtons) {\n    const copy = dv.copyButtons.appendChild(\n      Private.elt(\n        'div',\n        dv.type === 'left' ? '\\u21dd' : '\\u21dc',\n        'CodeMirror-merge-copy'\n      )\n    );\n    const editOriginals = dv.mv.options.allowEditingOriginals;\n    // @ts-ignore\n    copy.title = dv.edit.phrase(\n      editOriginals ? 'Push to left' : 'Revert chunk'\n    );\n    // @ts-ignore\n    copy.chunk = chunk;\n    copy.style.top =\n      (chunk.origTo > chunk.origFrom\n        ? top\n        : dv.edit.heightAtLine(chunk.editFrom, 'local') - sTopEdit) + 'px';\n\n    if (editOriginals) {\n      const topReverse =\n        dv.edit.heightAtLine(chunk.editFrom, 'local') - sTopEdit;\n      const copyReverse = dv.copyButtons.appendChild(\n        Private.elt(\n          'div',\n          dv.type == 'right' ? '\\u21dd' : '\\u21dc',\n          'CodeMirror-merge-copy-reverse'\n        )\n      );\n      copyReverse.title = 'Push to right';\n      // @ts-ignore\n      copyReverse.chunk = {\n        editFrom: chunk.origFrom,\n        editTo: chunk.origTo,\n        origFrom: chunk.editFrom,\n        origTo: chunk.editTo\n      };\n      copyReverse.style.top = topReverse + 'px';\n      dv.type == 'right'\n        ? (copyReverse.style.left = '2px')\n        : (copyReverse.style.right = '2px');\n    }\n  }\n}\n\nfunction copyChunk(\n  dv: DiffView,\n  to: CodeMirror.Editor,\n  from: CodeMirror.Editor,\n  chunk: MergeView.IMergeViewDiffChunk\n) {\n  if (dv.diffOutOfDate) {\n    return;\n  }\n  const origStart =\n    chunk.origTo > from.lastLine()\n      ? Pos(chunk.origFrom - 1)\n      : Pos(chunk.origFrom, 0);\n  const origEnd = Pos(chunk.origTo, 0);\n  const editStart =\n    chunk.editTo > to.lastLine()\n      ? Pos(chunk.editFrom - 1)\n      : Pos(chunk.editFrom, 0);\n  const editEnd = Pos(chunk.editTo, 0);\n  const handler = dv.mv.options.revertChunk;\n  if (handler) {\n    handler(dv.mv, from, origStart, origEnd, to, editStart, editEnd);\n  } else {\n    to.replaceRange(from.getRange(origStart, origEnd), editStart, editEnd);\n  }\n}\n\n// Merge view, containing 0, 1, or 2 diff views.\n\n/**\n * A function that calculates either a two-way or three-way merge between different sets of content.\n */\nexport function mergeView(\n  node: HTMLElement,\n  options?: MergeView.IMergeViewEditorConfiguration\n): MergeView.IMergeViewEditor {\n  return new MergeView(node, options);\n}\n\nclass MergeView implements MergeView.IMergeViewEditor {\n  constructor(\n    node: HTMLElement,\n    options?: MergeView.IMergeViewEditorConfiguration\n  ) {\n    this.options = options;\n    const origLeft = options.origLeft == null ? options.orig : options.origLeft;\n    const origRight = options.origRight;\n\n    const hasLeft = origLeft != null;\n    const hasRight = origRight != null;\n\n    const panes = 1 + (hasLeft ? 1 : 0) + (hasRight ? 1 : 0);\n    const wrap: HTMLDivElement[] = [];\n    let left: DiffView | null = (this.left = null);\n    let right: DiffView | null = (this.right = null);\n    const self = this;\n\n    let leftPane: HTMLDivElement = null;\n    if (hasLeft) {\n      left = this.left = new DiffView(this, 'left');\n      leftPane = Private.elt(\n        'div',\n        null,\n        'CodeMirror-merge-pane CodeMirror-merge-left'\n      );\n      wrap.push(leftPane);\n      wrap.push(buildGap(left));\n    }\n\n    const editPane = Private.elt(\n      'div',\n      null,\n      'CodeMirror-merge-pane CodeMirror-merge-editor'\n    );\n    wrap.push(editPane);\n\n    let rightPane: HTMLDivElement = null;\n    if (hasRight) {\n      right = this.right = new DiffView(this, 'right');\n      wrap.push(buildGap(right));\n      rightPane = Private.elt(\n        'div',\n        null,\n        'CodeMirror-merge-pane CodeMirror-merge-right'\n      );\n      wrap.push(rightPane);\n    }\n\n    (hasRight ? rightPane : editPane).className +=\n      ' CodeMirror-merge-pane-rightmost';\n\n    wrap.push(Private.elt('div', null, null, 'height: 0; clear: both;'));\n\n    const wrapElt = (this.wrap = node.appendChild(\n      Private.elt(\n        'div',\n        wrap,\n        'CodeMirror-merge CodeMirror-merge-' + panes + 'pane'\n      )\n    ));\n    this.edit = CodeMirror(editPane, { ...options });\n    // Add gutter\n    const gutters = this.edit.getOption('gutters');\n    if (gutters.indexOf(GutterID) < 0) {\n      const newGutters: string[] = [];\n      if (this.edit.getOption('lineNumbers')) {\n        newGutters.push('CodeMirror-linenumbers');\n      }\n      newGutters.push(GutterID);\n      this.edit.setOption('gutters', newGutters);\n      options['gutters'] = newGutters;\n    }\n\n    if (left) {\n      left.init(leftPane, origLeft, options);\n    }\n    if (right) {\n      right.init(rightPane, origRight, options);\n    }\n    if (options.collapseIdentical) {\n      this.editor().operation(function() {\n        collapseIdenticalStretches(self, options.collapseIdentical);\n      });\n    }\n    if (options.connect == 'align') {\n      this.aligners = [];\n      alignChunks(this.left || this.right, true);\n    }\n    if (left) {\n      left.registerEvents(right);\n    }\n    if (right) {\n      right.registerEvents(left);\n    }\n\n    const onResize = function() {\n      if (left) {\n        makeConnections(left);\n      }\n      if (right) {\n        makeConnections(right);\n      }\n    };\n    CodeMirror.on(window, 'resize', onResize);\n    const resizeInterval = setInterval(function() {\n      let p = null;\n      for (\n        p = wrapElt.parentNode;\n        p && p !== document.body;\n        p = p.parentNode\n      ) {} // eslint-disable-line no-empty\n      if (!p) {\n        clearInterval(resizeInterval);\n        CodeMirror.off(window, 'resize', onResize);\n      }\n    }, 5000);\n  }\n\n  editor(): CodeMirror.Editor {\n    return this.edit;\n  }\n\n  rightOriginal(): CodeMirror.Editor {\n    return this.right && this.right.orig;\n  }\n\n  leftOriginal(): CodeMirror.Editor {\n    return this.left && this.left.orig;\n  }\n\n  setShowDifferences(val: boolean) {\n    if (this.right) {\n      this.right.setShowDifferences(val);\n    }\n    if (this.left) {\n      this.left.setShowDifferences(val);\n    }\n  }\n\n  rightChunks() {\n    if (this.right) {\n      ensureDiff(this.right);\n      return this.right.chunks;\n    }\n  }\n\n  leftChunks() {\n    if (this.left) {\n      ensureDiff(this.left);\n      return this.left.chunks;\n    }\n  }\n\n  options: MergeView.IMergeViewEditorConfiguration;\n  left: DiffView | null;\n  right: DiffView | null;\n  wrap: HTMLDivElement;\n  edit: CodeMirror.Editor;\n  aligners: CodeMirror.LineWidget[];\n}\n\nfunction buildGap(dv: DiffView) {\n  const lock = (dv.lockButton = Private.elt(\n    'div',\n    null,\n    'CodeMirror-merge-scrolllock'\n  ));\n  const lockWrap = Private.elt(\n    'div',\n    [lock],\n    'CodeMirror-merge-scrolllock-wrap'\n  );\n  CodeMirror.on(lock, 'click', function() {\n    DiffView.setScrollLock(dv, !dv.lockScroll);\n  });\n  const gapElts: Element[] = [lockWrap];\n  if (dv.mv.options.revertButtons !== false) {\n    dv.copyButtons = Private.elt(\n      'div',\n      null,\n      'CodeMirror-merge-copybuttons-' + dv.type\n    );\n    CodeMirror.on(dv.copyButtons, 'click', function(e: MouseEvent) {\n      const node = (e.target || e.srcElement) as any;\n      if (!node.chunk) {\n        return;\n      }\n      if (node.className == 'CodeMirror-merge-copy-reverse') {\n        copyChunk(dv, dv.orig, dv.edit, node.chunk);\n        return;\n      }\n      copyChunk(dv, dv.edit, dv.orig, node.chunk);\n    });\n    gapElts.unshift(dv.copyButtons);\n  }\n  if (dv.mv.options.connect != 'align') {\n    let svg =\n      document.createElementNS && document.createElementNS(svgNS, 'svg');\n    if (svg && !svg.createSVGRect) {\n      svg = null;\n    }\n    dv.svg = svg;\n    if (svg) {\n      gapElts.push(svg);\n    }\n  }\n\n  return (dv.gap = Private.elt('div', gapElts, 'CodeMirror-merge-gap'));\n}\n\nfunction asString(obj: string | CodeMirror.Doc) {\n  if (typeof obj == 'string') {\n    return obj;\n  } else {\n    return obj.getValue();\n  }\n}\n\n// Operations on diffs\nlet dmp: diff_match_patch;\nfunction getDiff(\n  a: string,\n  b: string,\n  ignoreWhitespace?: boolean\n): MergeView.Diff[] {\n  if (!dmp) {\n    dmp = new diff_match_patch();\n  }\n\n  const diff = dmp.diff_main(a, b);\n  // The library sometimes leaves in empty parts, which confuse the algorithm\n  for (let i = 0; i < diff.length; ++i) {\n    const part = diff[i];\n    if (ignoreWhitespace ? !/[^ \\t]/.test(part[1]) : !part[1]) {\n      diff.splice(i--, 1);\n    } else if (i && diff[i - 1][0] == part[0]) {\n      diff.splice(i--, 1);\n      diff[i][1] += part[1];\n    }\n  }\n  return diff;\n}\n\nfunction getChunks(diff: MergeView.Diff[]): MergeView.IMergeViewDiffChunk[] {\n  const chunks: MergeView.IMergeViewDiffChunk[] = [];\n  if (!diff.length) {\n    return chunks;\n  }\n  let startEdit = 0;\n  let startOrig = 0;\n  const edit = Pos(0, 0);\n  const orig = Pos(0, 0);\n  for (let i = 0; i < diff.length; ++i) {\n    const part = diff[i];\n    const tp = part[0];\n    if (tp == DiffStatus.Equal) {\n      const startOff =\n        !startOfLineClean(diff, i) ||\n        edit.line < startEdit ||\n        orig.line < startOrig\n          ? 1\n          : 0;\n      const cleanFromEdit = edit.line + startOff;\n      const cleanFromOrig = orig.line + startOff;\n      moveOver(edit, part[1], null, orig);\n      const endOff = endOfLineClean(diff, i) ? 1 : 0;\n      const cleanToEdit = edit.line + endOff;\n      const cleanToOrig = orig.line + endOff;\n      if (cleanToEdit > cleanFromEdit) {\n        if (i) {\n          chunks.push({\n            origFrom: startOrig,\n            origTo: cleanFromOrig,\n            editFrom: startEdit,\n            editTo: cleanFromEdit\n          });\n        }\n        startEdit = cleanToEdit;\n        startOrig = cleanToOrig;\n      }\n    } else {\n      moveOver(tp == DiffStatus.Insert ? edit : orig, part[1]);\n    }\n  }\n  if (startEdit <= edit.line || startOrig <= orig.line) {\n    chunks.push({\n      origFrom: startOrig,\n      origTo: orig.line + 1,\n      editFrom: startEdit,\n      editTo: edit.line + 1\n    });\n  }\n  return chunks;\n}\n\nfunction endOfLineClean(diff: MergeView.Diff[], i: number): boolean {\n  if (i === diff.length - 1) {\n    return true;\n  }\n  let next = diff[i + 1][1];\n  if ((next.length === 1 && i < diff.length - 2) || next.charCodeAt(0) !== 10) {\n    return false;\n  }\n  if (i === diff.length - 2) {\n    return true;\n  }\n  next = diff[i + 2][1];\n  return (next.length > 1 || i == diff.length - 3) && next.charCodeAt(0) === 10;\n}\n\nfunction startOfLineClean(diff: MergeView.Diff[], i: number): boolean {\n  if (i === 0) {\n    return true;\n  }\n  let last = diff[i - 1][1];\n  if (last.charCodeAt(last.length - 1) != 10) {\n    return false;\n  }\n  if (i == 1) {\n    return true;\n  }\n  last = diff[i - 2][1];\n  return last.charCodeAt(last.length - 1) == 10;\n}\n\nfunction chunkBoundariesAround(\n  chunks: MergeView.IMergeViewDiffChunk[],\n  n: number,\n  nInEdit: boolean\n) {\n  let beforeE: number;\n  let afterE: number;\n  let beforeO: number;\n  let afterO: number;\n  for (let i = 0; i < chunks.length; i++) {\n    const chunk = chunks[i];\n    const fromLocal = nInEdit ? chunk.editFrom : chunk.origFrom;\n    const toLocal = nInEdit ? chunk.editTo : chunk.origTo;\n    if (afterE == null) {\n      if (fromLocal > n) {\n        afterE = chunk.editFrom;\n        afterO = chunk.origFrom;\n      } else if (toLocal > n) {\n        afterE = chunk.editTo;\n        afterO = chunk.origTo;\n      }\n    }\n    if (toLocal <= n) {\n      beforeE = chunk.editTo;\n      beforeO = chunk.origTo;\n    } else if (fromLocal <= n) {\n      beforeE = chunk.editFrom;\n      beforeO = chunk.origFrom;\n    }\n  }\n  return {\n    edit: { before: beforeE, after: afterE },\n    orig: { before: beforeO, after: afterO }\n  };\n}\n\nfunction collapseSingle(\n  cm: CodeMirror.Editor,\n  from: number,\n  to: number\n): { mark: CodeMirror.TextMarker; clear: () => void } {\n  cm.addLineClass(from, 'wrap', 'CodeMirror-merge-collapsed-line');\n  const widget = document.createElement('span');\n  widget.className = 'CodeMirror-merge-collapsed-widget';\n  // @ts-ignore\n  widget.title = cm.phrase('Identical text collapsed. Click to expand.');\n  // @ts-ignore\n  const mark = cm.markText(Pos(from, 0), Pos(to - 1), {\n    inclusiveLeft: true,\n    inclusiveRight: true,\n    replacedWith: widget,\n    clearOnEnter: true\n  });\n  function clear() {\n    mark.clear();\n    cm.removeLineClass(from, 'wrap', 'CodeMirror-merge-collapsed-line');\n  }\n  // @ts-ignore\n  if (mark.explicitlyCleared) {\n    clear();\n  }\n  CodeMirror.on(widget, 'click', clear);\n  mark.on('clear', clear);\n  CodeMirror.on(widget, 'click', clear);\n  return { mark: mark, clear: clear };\n}\n\nfunction collapseStretch(size: number, editors: any[]): any {\n  const marks: Array<{\n    mark: CodeMirror.TextMarker;\n    clear: () => void;\n  }> = [];\n  function clear() {\n    for (let i = 0; i < marks.length; i++) {\n      marks[i].clear();\n    }\n  }\n  for (let i = 0; i < editors.length; i++) {\n    const editor = editors[i];\n    const mark = collapseSingle(editor.cm, editor.line, editor.line + size);\n    marks.push(mark);\n    mark.mark.on('clear', clear);\n  }\n  return marks[0].mark;\n}\n\nfunction unclearNearChunks(\n  dv: DiffView,\n  margin: number,\n  off: number,\n  clear: boolean[]\n) {\n  for (let i = 0; i < dv.chunks.length; i++) {\n    const chunk = dv.chunks[i];\n    for (let l = chunk.editFrom - margin; l < chunk.editTo + margin; l++) {\n      const pos = l + off;\n      if (pos >= 0 && pos < clear.length) {\n        clear[pos] = false;\n      }\n    }\n  }\n}\n\nfunction collapseIdenticalStretches(mv: MergeView, margin: number | boolean) {\n  if (typeof margin != 'number') {\n    margin = 2;\n  }\n  const clear: boolean[] = [];\n  const edit = mv.editor();\n  // @ts-ignore\n  const off: number = edit.firstLine();\n  // @ts-ignore\n  for (let l = off, e = edit.lastLine(); l <= e; l++) {\n    clear.push(true);\n  }\n  if (mv.left) {\n    unclearNearChunks(mv.left, margin, off, clear);\n  }\n  if (mv.right) {\n    unclearNearChunks(mv.right, margin, off, clear);\n  }\n\n  for (let i = 0; i < clear.length; i++) {\n    if (clear[i]) {\n      const line = i + off;\n      let size = 0;\n      for (size = 1; i < clear.length - 1 && clear[i + 1]; i++, size++) {} // eslint-disable-line no-empty\n      if (size > margin) {\n        const editors: { line: number; cm: CodeMirror.Editor }[] = [\n          { line: line, cm: edit }\n        ];\n        if (mv.left) {\n          editors.push({\n            line: getMatchingOrigLine(line, mv.left.chunks),\n            cm: mv.left.orig\n          });\n        }\n        if (mv.right) {\n          editors.push({\n            line: getMatchingOrigLine(line, mv.right.chunks),\n            cm: mv.right.orig\n          });\n        }\n        const mark = collapseStretch(size, editors);\n        if (mv.options.onCollapse) {\n          mv.options.onCollapse(mv, line, size, mark);\n        }\n      }\n    }\n  }\n}\n\nfunction moveOver(\n  pos: CodeMirror.Position,\n  str: string,\n  copy?: boolean,\n  other?: CodeMirror.Position\n): CodeMirror.Position {\n  const out = copy ? Pos(pos.line, pos.ch) : pos;\n  let at = 0;\n  for (;;) {\n    const nl = str.indexOf('\\n', at);\n    if (nl == -1) {\n      break;\n    }\n    ++out.line;\n    if (other) {\n      ++other.line;\n    }\n    at = nl + 1;\n  }\n  out.ch = (at ? 0 : out.ch) + (str.length - at);\n  if (other) {\n    other.ch = (at ? 0 : other.ch) + (str.length - at);\n  }\n  return out;\n}\n\n// Tracks collapsed markers and line widgets, in order to be able to\n// accurately align the content of two editors.\nenum Alignement {\n  F_WIDGET = 1,\n  F_WIDGET_BELOW = 2,\n  F_MARKER = 4\n}\n\nclass TrackAlignable {\n  cm: CodeMirror.Editor;\n  alignable: Array<Alignement>;\n  height: number;\n\n  constructor(cm: CodeMirror.Editor) {\n    this.cm = cm;\n    this.alignable = [];\n    // @ts-ignore\n    this.height = cm.doc.height;\n    const self = this;\n    // @ts-ignore\n    cm.on('markerAdded', function(_, marker) {\n      if (!marker.collapsed) {\n        return;\n      }\n      const found = marker.find(1);\n      if (found != null) {\n        self.set(found.line, Alignement.F_MARKER);\n      }\n    });\n    // @ts-ignore\n    cm.on('markerCleared', function(_, marker, _min, max) {\n      if (max !== null && marker.collapsed) {\n        self.check(max, Alignement.F_MARKER, self.hasMarker);\n      }\n    });\n    cm.on('markerChanged', this.signal.bind(this));\n    // @ts-ignore\n    cm.on('lineWidgetAdded', function(_, widget, lineNo) {\n      if (widget.mergeSpacer) {\n        return;\n      }\n      if (widget.above) {\n        self.set(lineNo - 1, Alignement.F_WIDGET_BELOW);\n      } else {\n        self.set(lineNo, Alignement.F_WIDGET);\n      }\n    });\n    // @ts-ignore\n    cm.on('lineWidgetCleared', function(_, widget, lineNo) {\n      if (widget.mergeSpacer) {\n        return;\n      }\n      if (widget.above) {\n        self.check(lineNo - 1, Alignement.F_WIDGET_BELOW, self.hasWidgetBelow);\n      } else {\n        self.check(lineNo, Alignement.F_WIDGET, self.hasWidget);\n      }\n    });\n    cm.on('lineWidgetChanged', this.signal.bind(this));\n    cm.on('change', function(_, change) {\n      const start = change.from.line;\n      const nBefore = change.to.line - change.from.line;\n      const nAfter = change.text.length - 1;\n      const end = start + nAfter;\n      if (nBefore || nAfter) {\n        self.map(start, nBefore, nAfter);\n      }\n      self.check(end, Alignement.F_MARKER, self.hasMarker);\n      if (nBefore || nAfter) {\n        self.check(change.from.line, Alignement.F_MARKER, self.hasMarker);\n      }\n    });\n    cm.on('viewportChange', function() {\n      // @ts-ignore\n      if (self.cm.doc.height !== self.height) {\n        self.signal();\n      }\n    });\n  }\n\n  signal() {\n    CodeMirror.signal(this, 'realign');\n    // @ts-ignore\n    this.height = this.cm.doc.height;\n  }\n\n  set(n: number, flags: Alignement) {\n    let pos = -1;\n    for (; pos < this.alignable.length; pos += 2) {\n      const diff = this.alignable[pos] - n;\n      if (diff == 0) {\n        if ((this.alignable[pos + 1] & flags) == flags) {\n          return;\n        }\n        this.alignable[pos + 1] |= flags;\n        this.signal();\n        return;\n      }\n      if (diff > 0) {\n        break;\n      }\n    }\n    this.signal();\n    this.alignable.splice(pos, 0, n, flags);\n  }\n\n  find(n: number): number {\n    for (let i = 0; i < this.alignable.length; i += 2) {\n      if (this.alignable[i] == n) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  check(n: number, flag: Alignement, pred: (n: number) => boolean) {\n    const found = this.find(n);\n    if (found == -1 || !(this.alignable[found + 1] & flag)) {\n      return;\n    }\n    if (!pred.call(this, n)) {\n      this.signal();\n      const flags = this.alignable[found + 1] & ~flag;\n      if (flags) {\n        this.alignable[found + 1] = flags;\n      } else {\n        this.alignable.splice(found, 2);\n      }\n    }\n  }\n\n  hasMarker(n: number): boolean {\n    const handle = this.cm.getLineHandle(n) as any;\n    if (handle.markedSpans) {\n      for (let i = 0; i < handle.markedSpans.length; i++) {\n        if (\n          handle.markedSpans[i].marker.collapsed &&\n          handle.markedSpans[i].to !== null\n        ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  hasWidget(n: number): boolean {\n    const handle = this.cm.getLineHandle(n) as any;\n    if (handle.widgets) {\n      for (let i = 0; i < handle.widgets.length; i++) {\n        if (!handle.widgets[i].above && !handle.widgets[i].mergeSpacer) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  hasWidgetBelow(n: number): boolean {\n    // @ts-ignore\n    if (n == this.cm.lastLine()) {\n      return false;\n    }\n\n    const handle = this.cm.getLineHandle(n + 1) as any;\n    if (handle.widgets) {\n      for (let i = 0; i < handle.widgets.length; i++) {\n        if (handle.widgets[i].above && !handle.widgets[i].mergeSpacer) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  map(from: number, nBefore: number, nAfter: number) {\n    const diff = nAfter - nBefore;\n    const to = from + nBefore;\n    let widgetFrom = -1;\n    let widgetTo = -1;\n    for (let i = 0; i < this.alignable.length; i += 2) {\n      const n = this.alignable[i];\n      if (n == from && this.alignable[i + 1] & Alignement.F_WIDGET_BELOW) {\n        widgetFrom = i;\n      }\n      if (n == to && this.alignable[i + 1] & Alignement.F_WIDGET_BELOW) {\n        widgetTo = i;\n      }\n      if (n <= from) {\n        continue;\n      } else if (n < to) {\n        this.alignable.splice(i--, 2);\n      } else {\n        this.alignable[i] += diff;\n      }\n    }\n    if (widgetFrom > -1) {\n      const flags = this.alignable[widgetFrom + 1];\n      if (flags == Alignement.F_WIDGET_BELOW) {\n        this.alignable.splice(widgetFrom, 2);\n      } else {\n        this.alignable[widgetFrom + 1] = flags & ~Alignement.F_WIDGET_BELOW;\n      }\n    }\n    if (widgetTo > -1 && nAfter) {\n      this.set(from + nAfter, Alignement.F_WIDGET_BELOW);\n    }\n  }\n}\n\n// @ts-ignore\nCodeMirror.commands.goNextDiff = function(cm: CodeMirror.Editor) {\n  return Private.goNearbyDiff(cm, 1);\n};\n\n// @ts-ignore\nCodeMirror.commands.goPrevDiff = function(cm: CodeMirror.Editor) {\n  return Private.goNearbyDiff(cm, -1);\n};\n\nnamespace Private {\n  // General utilities\n\n  export function elt<K extends keyof HTMLElementTagNameMap>(\n    tag: K,\n    content: Node[] | string,\n    className: string,\n    style?: string\n  ): HTMLElementTagNameMap[K] {\n    const e = document.createElement<K>(tag);\n    if (className) {\n      e.className = className;\n    }\n    if (style) {\n      e.style.cssText = style;\n    }\n    if (typeof content == 'string') {\n      e.appendChild(document.createTextNode(content));\n    } else if (content) {\n      for (let i = 0; i < content.length; ++i) {\n        e.appendChild(content[i]);\n      }\n    }\n    return e;\n  }\n\n  export function clear(node: ChildNode): void {\n    for (let count = node.childNodes.length; count > 0; --count) {\n      node.removeChild(node.firstChild);\n    }\n  }\n\n  export function attrs(elt: Element, ...args: any[]): void {\n    for (let i = 1; i < args.length; i += 2) {\n      elt.setAttribute(args[i], args[i + 1]);\n    }\n  }\n\n  export function posMin(a: CodeMirror.Position, b: CodeMirror.Position) {\n    return (a.line - b.line || a.ch - b.ch) < 0 ? a : b;\n  }\n  export function posMax(a: CodeMirror.Position, b: CodeMirror.Position) {\n    return (a.line - b.line || a.ch - b.ch) > 0 ? a : b;\n  }\n  export function posEq(a: CodeMirror.Position, b: CodeMirror.Position) {\n    return a.line == b.line && a.ch == b.ch;\n  }\n\n  function findPrevDiff(\n    chunks: MergeView.IMergeViewDiffChunk[],\n    start: number,\n    isOrig: boolean\n  ) {\n    for (let i = chunks.length - 1; i >= 0; i--) {\n      const chunk = chunks[i];\n      const to = (isOrig ? chunk.origTo : chunk.editTo) - 1;\n      if (to < start) {\n        return to;\n      }\n    }\n  }\n\n  function findNextDiff(\n    chunks: MergeView.IMergeViewDiffChunk[],\n    start: number,\n    isOrig: boolean\n  ) {\n    for (let i = 0; i < chunks.length; i++) {\n      const chunk = chunks[i];\n      const from = isOrig ? chunk.origFrom : chunk.editFrom;\n      if (from > start) {\n        return from;\n      }\n    }\n  }\n\n  export function goNearbyDiff(cm: CodeMirror.Editor, dir: number) {\n    let found = null;\n    const views = cm.state.diffViews;\n    // @ts-ignore\n    const line = cm.getCursor().line;\n    if (views) {\n      for (let i = 0; i < views.length; i++) {\n        const dv = views[i];\n        const isOrig = cm == dv.orig;\n        ensureDiff(dv);\n        const pos =\n          dir < 0\n            ? findPrevDiff(dv.chunks, line, isOrig)\n            : findNextDiff(dv.chunks, line, isOrig);\n        if (\n          pos != null &&\n          (found == null || (dir < 0 ? pos > found : pos < found))\n        ) {\n          found = pos;\n        }\n      }\n    }\n    if (found != null) {\n      // @ts-ignore\n      cm.setCursor(found, 0);\n    } else {\n      return CodeMirror.Pass;\n    }\n  }\n}\n"]}