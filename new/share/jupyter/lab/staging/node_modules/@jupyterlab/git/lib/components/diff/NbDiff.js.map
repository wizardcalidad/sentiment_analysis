{"version":3,"file":"NbDiff.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/diff/NbDiff.tsx"],"names":[],"mappings":"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","sourcesContent":["import { PathExt } from '@jupyterlab/coreutils';\nimport * as nbformat from '@jupyterlab/nbformat';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { ServerConnection } from '@jupyterlab/services/lib/serverconnection';\nimport { IDiffEntry } from 'nbdime/lib/diff/diffentries';\nimport { CellDiffModel, NotebookDiffModel } from 'nbdime/lib/diff/model';\nimport { CellDiffWidget } from 'nbdime/lib/diff/widget';\nimport * as React from 'react';\nimport { RefObject } from 'react';\nimport { httpGitRequest } from '../../git';\nimport { IDiffContext } from './model';\nimport { NBDiffHeader } from './NBDiffHeader';\nimport { IDiffProps, RenderMimeConsumer } from './Diff';\n\nexport interface ICellDiffProps {\n  cellChunk: CellDiffModel[];\n  mimeType: string;\n}\n\n/**\n * A React component which renders the diff is a single Notebook cell.\n *\n * This uses the NBDime PhosporJS CellDiffWidget internally. To get around the\n * PhosporJS <=> ReactJS barrier, it uses React Refs(https://reactjs.org/docs/refs-and-the-dom.html)\n *\n * During component render, a Ref is created for the ReactDOM and after the component\n * is mounted, the PhosporJS widget is created and attached to the Ref.\n */\nexport class CellDiff extends React.Component<ICellDiffProps> {\n  private unAddedOrRemovedRef: RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n  private addedRef: RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n  private removedRef: RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n  private renderMimeRegistry: IRenderMimeRegistry;\n\n  constructor(props: ICellDiffProps) {\n    super(props);\n  }\n\n  componentDidMount(): void {\n    const chunk = this.props.cellChunk;\n\n    if (chunk.length === 1 && !(chunk[0].added || chunk[0].deleted)) {\n      const widget = new CellDiffWidget(\n        chunk[0],\n        this.renderMimeRegistry,\n        this.props.mimeType\n      );\n      this.unAddedOrRemovedRef.current.appendChild(widget.node);\n    } else {\n      for (let j = 0; j < chunk.length; j++) {\n        const cell = chunk[j];\n        const ref = cell.deleted ? this.removedRef : this.addedRef;\n        const widget = new CellDiffWidget(\n          cell,\n          this.renderMimeRegistry,\n          this.props.mimeType\n        );\n        ref.current.appendChild(widget.node);\n      }\n    }\n  }\n\n  render() {\n    const chunk = this.props.cellChunk;\n    return (\n      <RenderMimeConsumer>\n        {(value: IRenderMimeRegistry) => {\n          this.renderMimeRegistry = value;\n          return (\n            <React.Fragment>\n              {chunk.length === 1 && !(chunk[0].added || chunk[0].deleted) ? (\n                <div ref={this.unAddedOrRemovedRef} />\n              ) : (\n                <div className={'jp-Diff-addremchunk'}>\n                  <div className={'jp-Diff-addedchunk'} ref={this.addedRef} />\n                  <div\n                    className={'jp-Diff-removedchunk'}\n                    ref={this.removedRef}\n                  />\n                </div>\n              )}\n            </React.Fragment>\n          );\n        }}\n      </RenderMimeConsumer>\n    );\n  }\n}\n\nexport interface INBDiffState {\n  nbdModel: NotebookDiffModel;\n  errorMessage: string;\n}\n\ninterface INbdimeDiff {\n  base?: nbformat.INotebookContent;\n  diff?: IDiffEntry[];\n  message?: string;\n}\n\n/**\n * A React component to render the diff of a single Notebook file.\n *\n * 1. It calls the `/nbdime/api/gitdiff` API on the server to get the diff model\n * 2. Renders the Diff header\n * 3. For each cell, invokes the CellDiff component\n */\nexport class NBDiff extends React.Component<IDiffProps, INBDiffState> {\n  constructor(props: IDiffProps) {\n    super(props);\n    this.state = {\n      nbdModel: undefined,\n      errorMessage: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.performDiff(this.props.diffContext);\n  }\n\n  render() {\n    if (this.state.errorMessage !== undefined) {\n      return (\n        <div>\n          <span className=\"jp-git-diff-error\">\n            Failed to fetch diff with error:\n            <span className=\"jp-git-diff-error-message\">\n              {this.state.errorMessage}\n            </span>\n          </span>\n        </div>\n      );\n    } else if (this.state.nbdModel !== undefined) {\n      const cellComponents = this.state.nbdModel.chunkedCells.map(\n        (cellChunk, index) => (\n          <CellDiff\n            key={index}\n            cellChunk={cellChunk}\n            mimeType={this.state.nbdModel.mimetype}\n          />\n        )\n      );\n      return (\n        <div className=\"jp-git-diff-Widget\">\n          <div className=\"jp-git-diff-root jp-mod-hideunchanged\">\n            <div className=\"jp-git-Notebook-diff\">\n              <NBDiffHeader {...this.props} />\n              {cellComponents}\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Based on the Diff Context , calls the server API with the revant parameters\n   * to\n   * @param diffContext the context in which to perform the diff\n   */\n  private performDiff(diffContext: IDiffContext): void {\n    try {\n      // Resolve what API parameter to call.\n      let currentRefValue: any;\n      if ('specialRef' in diffContext.currentRef) {\n        currentRefValue = {\n          special: diffContext.currentRef.specialRef\n        };\n      } else {\n        currentRefValue = {\n          git: diffContext.currentRef.gitRef\n        };\n      }\n\n      httpGitRequest('/nbdime/api/gitdiff', 'POST', {\n        file_path: PathExt.join(this.props.topRepoPath, this.props.path),\n        ref_local: { git: diffContext.previousRef.gitRef },\n        ref_remote: currentRefValue\n      }).then((response: Response) => {\n        response\n          .json()\n          .then((data: INbdimeDiff) => {\n            if (response.status !== 200) {\n              // Handle error\n              this.setState({\n                errorMessage:\n                  data.message || 'Unknown error. Please check the server log.'\n              });\n            } else {\n              // Handle response\n              const base = data.base;\n              const diff = data.diff;\n              const nbdModel = new NotebookDiffModel(base, diff);\n              this.setState({\n                nbdModel: nbdModel\n              });\n            }\n          })\n          .catch(reason => {\n            // Handle error\n            this.setState({\n              errorMessage:\n                reason.message || 'Unknown error. Please check the server log.'\n            });\n          });\n      });\n    } catch (err) {\n      throw ServerConnection.NetworkError;\n    }\n  }\n}\n"]}