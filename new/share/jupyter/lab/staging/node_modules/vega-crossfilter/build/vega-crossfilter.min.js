!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("d3-array"),require("vega-dataflow"),require("vega-util")):"function"==typeof define&&define.amd?define(["exports","d3-array","vega-dataflow","vega-util"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).vega=e.vega||{},e.vega.transforms={}),e.d3,e.vega,e.vega)}(this,(function(e,t,r,i){"use strict";const n=e=>new Uint8Array(e),s=e=>new Uint16Array(e),o=e=>new Uint32Array(e);function l(e,t,r){const i=(t<257?n:t<65537?s:o)(e);return r&&i.set(r),i}function a(e,t,r){const i=1<<t;return{one:i,zero:~i,range:r.slice(),bisect:e.bisect,index:e.index,size:e.size,onAdd(e,t){const r=this,n=r.bisect(r.range,e.value),s=e.index,o=n[0],l=n[1],a=s.length;let f;for(f=0;f<o;++f)t[s[f]]|=i;for(f=l;f<a;++f)t[s[f]]|=i;return r}}}function f(){let e=o(0),r=[],i=0;return{insert:function(n,s,l){if(!s.length)return[];const a=i,f=s.length,d=o(f);let u,h,c,m=Array(f);for(c=0;c<f;++c)m[c]=n(s[c]),d[c]=c;if(m=function(e,r){return e.sort.call(r,(t,r)=>{const i=e[t],n=e[r];return i<n?-1:i>n?1:0}),t.permute(e,r)}(m,d),a)u=r,h=e,r=Array(a+f),e=o(a+f),function(e,t,r,i,n,s,o,l,a){let f,d=0,u=0;for(f=0;d<i&&u<o;++f)t[d]<n[u]?(l[f]=t[d],a[f]=r[d++]):(l[f]=n[u],a[f]=s[u++]+e);for(;d<i;++d,++f)l[f]=t[d],a[f]=r[d];for(;u<o;++u,++f)l[f]=n[u],a[f]=s[u]+e}(l,u,h,a,m,d,f,r,e);else{if(l>0)for(c=0;c<f;++c)d[c]+=l;r=m,e=d}return i=a+f,{index:d,value:m}},remove:function(t,n){const s=i;let o,l,a;for(l=0;!n[e[l]]&&l<s;++l);for(a=l;l<s;++l)n[o=e[l]]||(e[a]=o,r[a]=r[l],++a);i=s-t},bisect:function(e,n){let s;return n?s=n.length:(n=r,s=i),[t.bisectLeft(n,e[0],0,s),t.bisectRight(n,e[1],0,s)]},reindex:function(t){for(let r=0,n=i;r<n;++r)e[r]=t[e[r]]},index:()=>e,size:()=>i}}function d(e){r.Transform.call(this,function(){let e=8,t=[],r=o(0),i=l(0,e),n=l(0,e);return{data:()=>t,seen:()=>r=function(e,t,r){return e.length>=t?e:((r=r||new e.constructor(t)).set(e),r)}(r,t.length),add(e){for(let r,i=0,n=t.length,s=e.length;i<s;++i)r=e[i],r._index=n++,t.push(r)},remove(e,r){const s=t.length,o=Array(s-e),l=t;let a,f,d;for(f=0;!r[f]&&f<s;++f)o[f]=t[f],l[f]=f;for(d=f;f<s;++f)a=t[f],r[f]?l[f]=-1:(l[f]=d,i[d]=i[f],n[d]=n[f],o[d]=a,a._index=d++),i[f]=0;return t=o,l},size:()=>t.length,curr:()=>i,prev:()=>n,reset:e=>n[e]=i[e],all:()=>e<257?255:e<65537?65535:4294967295,set(e,t){i[e]|=t},clear(e,t){i[e]&=~t},resize(t,r){(t>i.length||r>e)&&(e=Math.max(r,e),i=l(t,e,i),n=l(t,e))}}}(),e),this._indices=null,this._dims=null}function u(e){r.Transform.call(this,null,e)}d.Definition={type:"CrossFilter",metadata:{},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"query",type:"array",array:!0,required:!0,content:{type:"number",array:!0,length:2}}]},i.inherits(d,r.Transform,{transform(e,t){return this._dims?e.modified("fields")||e.fields.some(e=>t.modified(e.fields))?this.reinit(e,t):this.eval(e,t):this.init(e,t)},init(e,t){const r=e.fields,i=e.query,n=this._indices={},s=this._dims=[],o=i.length;let l,d,u=0;for(;u<o;++u)l=r[u].fname,d=n[l]||(n[l]=f()),s.push(a(d,u,i[u]));return this.eval(e,t)},reinit(e,t){const r=t.materialize().fork(),i=e.fields,n=e.query,s=this._indices,o=this._dims,l=this.value,d=l.curr(),u=l.prev(),h=l.all(),c=r.rem=r.add,m=r.mod,g=n.length,p={};let v,y,x,_,b,A,q,M,z;if(u.set(d),t.rem.length&&(b=this.remove(e,t,r)),t.add.length&&l.add(t.add),t.mod.length)for(A={},_=t.mod,q=0,M=_.length;q<M;++q)A[_[q]._index]=1;for(q=0;q<g;++q)z=i[q],(!o[q]||e.modified("fields",q)||t.modified(z.fields))&&(x=z.fname,(v=p[x])||(s[x]=y=f(),p[x]=v=y.insert(z,t.source,0)),o[q]=a(y,q,n[q]).onAdd(v,d));for(q=0,M=l.data().length;q<M;++q)b[q]||(u[q]!==d[q]?c.push(q):A[q]&&d[q]!==h&&m.push(q));return l.mask=(1<<g)-1,r},eval(e,t){const r=t.materialize().fork(),i=this._dims.length;let n=0;return t.rem.length&&(this.remove(e,t,r),n|=(1<<i)-1),e.modified("query")&&!e.modified("fields")&&(n|=this.update(e,t,r)),t.add.length&&(this.insert(e,t,r),n|=(1<<i)-1),t.mod.length&&(this.modify(t,r),n|=(1<<i)-1),this.value.mask=n,r},insert(e,t,r){const i=t.add,n=this.value,s=this._dims,o=this._indices,l=e.fields,a={},f=r.add,d=n.size()+i.length,u=s.length;let h,c,m,g=n.size();n.resize(d,u),n.add(i);const p=n.curr(),v=n.prev(),y=n.all();for(h=0;h<u;++h)c=l[h].fname,m=a[c]||(a[c]=o[c].insert(l[h],i,g)),s[h].onAdd(m,p);for(;g<d;++g)v[g]=y,p[g]!==y&&f.push(g)},modify(e,t){const r=t.mod,i=this.value,n=i.curr(),s=i.all(),o=e.mod;let l,a,f;for(l=0,a=o.length;l<a;++l)f=o[l]._index,n[f]!==s&&r.push(f)},remove(e,t,r){const i=this._indices,n=this.value,s=n.curr(),o=n.prev(),l=n.all(),a={},f=r.rem,d=t.rem;let u,h,c,m;for(u=0,h=d.length;u<h;++u)c=d[u]._index,a[c]=1,o[c]=m=s[c],s[c]=l,m!==l&&f.push(c);for(c in i)i[c].remove(h,a);return this.reindex(t,h,a),a},reindex(e,t,r){const i=this._indices,n=this.value;e.runAfter(()=>{const e=n.remove(t,r);for(const t in i)i[t].reindex(e)})},update(e,t,r){const i=this._dims,n=e.query,s=t.stamp,o=i.length;let l,a,f=0;for(r.filters=0,a=0;a<o;++a)e.modified("query",a)&&(l=a,++f);if(1===f)f=i[l].one,this.incrementOne(i[l],n[l],r.add,r.rem);else for(a=0,f=0;a<o;++a)e.modified("query",a)&&(f|=i[a].one,this.incrementAll(i[a],n[a],s,r.add),r.rem=r.add);return f},incrementAll(e,t,r,i){const n=this.value,s=n.seen(),o=n.curr(),l=n.prev(),a=e.index(),f=e.bisect(e.range),d=e.bisect(t),u=d[0],h=d[1],c=f[0],m=f[1],g=e.one;let p,v,y;if(u<c)for(p=u,v=Math.min(c,h);p<v;++p)y=a[p],s[y]!==r&&(l[y]=o[y],s[y]=r,i.push(y)),o[y]^=g;else if(u>c)for(p=c,v=Math.min(u,m);p<v;++p)y=a[p],s[y]!==r&&(l[y]=o[y],s[y]=r,i.push(y)),o[y]^=g;if(h>m)for(p=Math.max(u,m),v=h;p<v;++p)y=a[p],s[y]!==r&&(l[y]=o[y],s[y]=r,i.push(y)),o[y]^=g;else if(h<m)for(p=Math.max(c,h),v=m;p<v;++p)y=a[p],s[y]!==r&&(l[y]=o[y],s[y]=r,i.push(y)),o[y]^=g;e.range=t.slice()},incrementOne(e,t,r,i){const n=this.value.curr(),s=e.index(),o=e.bisect(e.range),l=e.bisect(t),a=l[0],f=l[1],d=o[0],u=o[1],h=e.one;let c,m,g;if(a<d)for(c=a,m=Math.min(d,f);c<m;++c)g=s[c],n[g]^=h,r.push(g);else if(a>d)for(c=d,m=Math.min(a,u);c<m;++c)g=s[c],n[g]^=h,i.push(g);if(f>u)for(c=Math.max(a,u),m=f;c<m;++c)g=s[c],n[g]^=h,r.push(g);else if(f<u)for(c=Math.max(d,f),m=u;c<m;++c)g=s[c],n[g]^=h,i.push(g);e.range=t.slice()}}),u.Definition={type:"ResolveFilter",metadata:{},params:[{name:"ignore",type:"number",required:!0,description:"A bit mask indicating which filters to ignore."},{name:"filter",type:"object",required:!0,description:"Per-tuple filter bitmaps from a CrossFilter transform."}]},i.inherits(u,r.Transform,{transform(e,t){const r=~(e.ignore||0),i=e.filter,n=i.mask;if(0==(n&r))return t.StopPropagation;const s=t.fork(t.ALL),o=i.data(),l=i.curr(),a=i.prev(),f=e=>l[e]&r?null:o[e];return s.filter(s.MOD,f),n&n-1?(s.filter(s.ADD,e=>{const t=l[e]&r;return!t&&t^a[e]&r?o[e]:null}),s.filter(s.REM,e=>{const t=l[e]&r;return t&&!(t^t^a[e]&r)?o[e]:null})):(s.filter(s.ADD,f),s.filter(s.REM,e=>(l[e]&r)===n?o[e]:null)),s.filter(s.SOURCE,e=>f(e._index))}}),e.crossfilter=d,e.resolvefilter=u,Object.defineProperty(e,"__esModule",{value:!0})}));